#ifndef __cocos2dx_studio_h__
#define __cocos2dx_studio_h__

#include "jsapi.h"
#include "jsfriendapi.h"


extern JSClass  *jsb_CCBaseData_class;
extern JSObject *jsb_CCBaseData_prototype;

JSBool js_cocos2dx_studio_CCBaseData_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCBaseData_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCBaseData(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCBaseData_getColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBaseData_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBaseData_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBaseData_CCBaseData(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCTween_class;
extern JSObject *jsb_CCTween_prototype;

JSBool js_cocos2dx_studio_CCTween_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCTween_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCTween(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCTween_play(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_gotoAndPause(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_getAnimation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_gotoAndPlay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_setAnimation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_CCTween(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCColliderFilter_class;
extern JSObject *jsb_CCColliderFilter_prototype;

JSBool js_cocos2dx_studio_CCColliderFilter_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCColliderFilter_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCColliderFilter(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);

extern JSClass  *jsb_ColliderBody_class;
extern JSObject *jsb_ColliderBody_prototype;

JSBool js_cocos2dx_studio_ColliderBody_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_ColliderBody_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_ColliderBody(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);

extern JSClass  *jsb_CCDisplayManager_class;
extern JSObject *jsb_CCDisplayManager_prototype;

JSBool js_cocos2dx_studio_CCDisplayManager_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCDisplayManager_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCDisplayManager(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCDisplayManager_getDisplayRenderNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getAnchorPointInPoints(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getDisplayRenderNodeType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_removeDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_setForceChangeDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getBoundingBox(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_addDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_containPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_changeDisplayWithIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_changeDisplayWithName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getCurrentDisplayIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getForceChangeDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getDecorativeDisplayList(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_isVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_setVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_CCDisplayManager(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCBone_class;
extern JSObject *jsb_CCBone_prototype;

JSBool js_cocos2dx_studio_CCBone_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCBone_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCBone(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCBone_nodeToWorldTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_isTransformDirty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_updateZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setTransformDirty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getDisplayRenderNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_isBlendDirty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_addChildBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getWorldInfo(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getTween(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getParentBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_updateColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setChildArmature(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getDisplayRenderNodeType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_removeDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_updateDisplayedOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getIgnoreMovementBoneData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setIgnoreMovementBoneData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_removeFromParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setParentBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setDisplayManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getChildArmature(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_changeDisplayWithIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_changeDisplayWithName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getColliderBodyList(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setArmature(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setBlendDirty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_addDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_removeChildBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getDisplayManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getArmature(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_nodeToArmatureTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_updateDisplayedColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_CCBone(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCBatchNode_class;
extern JSObject *jsb_CCBatchNode_prototype;

JSBool js_cocos2dx_studio_CCBatchNode_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCBatchNode_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCBatchNode(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCBatchNode_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBatchNode_getTexureAtlasWithTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBatchNode_removeChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBatchNode_create(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCArmatureAnimation_class;
extern JSObject *jsb_CCArmatureAnimation_prototype;

JSBool js_cocos2dx_studio_CCArmatureAnimation_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCArmatureAnimation_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCArmatureAnimation(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCArmatureAnimation_setAnimationInternal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_playByIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_getSpeedScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_pause(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_setSpeedScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_getAnimationScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_play(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_gotoAndPause(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_resume(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_stop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_getAnimationData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_playWithArray(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_playWithIndexArray(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_playWithIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_getCurrentMovementID(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_setAnimationScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_setAnimationData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_gotoAndPlay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_getMovementCount(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_CCArmatureAnimation(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCArmature_class;
extern JSObject *jsb_CCArmature_prototype;

JSBool js_cocos2dx_studio_CCArmature_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCArmature_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCArmature(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCArmature_getBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_changeBoneParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getTexureAtlasWithTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setAnimation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getBoneAtPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getBatchNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setVersion(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_updateOffsetPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getParentBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_removeBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getArmatureTransformDirty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setParentBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_drawContour(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setBatchNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_draw(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_nodeToParentTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setArmatureData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setTextureAtlas(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_addBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getArmatureData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_boundingBox(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getVersion(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getAnimation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getBoneDic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getTextureAtlas(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_CCArmature(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCSkin_class;
extern JSObject *jsb_CCSkin_prototype;

JSBool js_cocos2dx_studio_CCSkin_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCSkin_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCSkin(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCSkin_getBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_nodeToWorldTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_initWithFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_nodeToWorldTransformAR(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_updateTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_getDisplayName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_updateArmatureTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_initWithSpriteFrameName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_setBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_createWithSpriteFrameName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_CCSkin(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCArmatureDataManager_class;
extern JSObject *jsb_CCArmatureDataManager_prototype;

JSBool js_cocos2dx_studio_CCArmatureDataManager_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCArmatureDataManager_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCArmatureDataManager(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCArmatureDataManager_addArmatureFileInfo(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_removeArmatureFileInfo(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_isAutoLoadSpriteFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_addSpriteFrameFromFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_purge(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_sharedArmatureDataManager(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCComAttribute_class;
extern JSObject *jsb_CCComAttribute_prototype;

JSBool js_cocos2dx_studio_CCComAttribute_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCComAttribute_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCComAttribute(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCComAttribute_getFloat(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_getBool(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_setFloat(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_setCString(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_getCString(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_serialize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_setInt(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_parse(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_getInt(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_setBool(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_createInstance(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCComAudio_class;
extern JSObject *jsb_CCComAudio_prototype;

JSBool js_cocos2dx_studio_CCComAudio_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCComAudio_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCComAudio(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCComAudio_stopAllEffects(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_serialize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_getEffectsVolume(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_stopEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_getBackgroundMusicVolume(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_willPlayBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_setBackgroundMusicVolume(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_end(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_isEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_stopBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_pauseBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_isBackgroundMusicPlaying(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_isLoop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_pauseAllEffects(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_setEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_preloadBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_playBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_playEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_resumeAllEffects(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_setLoop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_unloadEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_rewindBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_preloadEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_pauseEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_resumeBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_setFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_setEffectsVolume(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_getFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_resumeEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_createInstance(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCInputDelegate_class;
extern JSObject *jsb_CCInputDelegate_prototype;

JSBool js_cocos2dx_studio_CCInputDelegate_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCInputDelegate_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCInputDelegate(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCInputDelegate_isAccelerometerEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_setKeypadEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_getTouchMode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_setAccelerometerEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_isKeypadEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_isTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_setTouchPriority(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_getTouchPriority(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_setTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_setTouchMode(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCComController_class;
extern JSObject *jsb_CCComController_prototype;

JSBool js_cocos2dx_studio_CCComController_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCComController_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCComController(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCComController_setEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComController_isEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComController_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComController_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComController_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComController_createInstance(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComController_CCComController(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCComRender_class;
extern JSObject *jsb_CCComRender_prototype;

JSBool js_cocos2dx_studio_CCComRender_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCComRender_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCComRender(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCComRender_setNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComRender_serialize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComRender_getNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComRender_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComRender_createInstance(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_LayoutParameter_class;
extern JSObject *jsb_LayoutParameter_prototype;

JSBool js_cocos2dx_studio_LayoutParameter_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_LayoutParameter_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_LayoutParameter(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_LayoutParameter_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LayoutParameter_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LayoutParameter_LayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_LinearLayoutParameter_class;
extern JSObject *jsb_LinearLayoutParameter_prototype;

JSBool js_cocos2dx_studio_LinearLayoutParameter_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_LinearLayoutParameter_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_LinearLayoutParameter(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_LinearLayoutParameter_setGravity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LinearLayoutParameter_getGravity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LinearLayoutParameter_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LinearLayoutParameter_LinearLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_RelativeLayoutParameter_class;
extern JSObject *jsb_RelativeLayoutParameter_prototype;

JSBool js_cocos2dx_studio_RelativeLayoutParameter_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_RelativeLayoutParameter_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_RelativeLayoutParameter(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_RelativeLayoutParameter_setAlign(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_RelativeLayoutParameter_setRelativeToWidgetName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_RelativeLayoutParameter_getRelativeName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_RelativeLayoutParameter_getRelativeToWidgetName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_RelativeLayoutParameter_setRelativeName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_RelativeLayoutParameter_getAlign(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_RelativeLayoutParameter_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_RelativeLayoutParameter_RelativeLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_Widget_class;
extern JSObject *jsb_Widget_prototype;

JSBool js_cocos2dx_studio_Widget_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_Widget_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_Widget(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_Widget_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setSizePercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setActionTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getLeftInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getTouchEndPos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getNodes(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getChildByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_isIgnoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_updateSizeAndPosition(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getBottomInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getActionTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getPositionType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getChildByName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_isEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_removeNodeByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_removeAllChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_isTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getTouchStartPos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_didNotSelectSelf(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setFocused(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_clone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getTouchMovePos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setBrightStyle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_addNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_removeFromParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_removeAllChildrenWithCleanup(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_sortAllChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_isBright(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_clippingParentAreaContainPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getSizePercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_removeFromParentAndCleanup(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getTopInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getWidgetType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getNodeByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getRightInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getSizeType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_removeNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_removeAllNodes(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getWorldPosition(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getPositionPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_removeChildByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_hitTest(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_removeChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_isFocused(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setSizeType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_checkChildInfo(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_setBright(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_getChildrenCount(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Widget_Widget(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_Layout_class;
extern JSObject *jsb_Layout_prototype;

JSBool js_cocos2dx_studio_Layout_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_Layout_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_Layout(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_Layout_setBackGroundColorVector(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_setClippingType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_setBackGroundColorType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_removeBackGroundImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_setBackGroundImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_setBackGroundColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_requestDoLayout(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_isClippingEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_setClippingEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_setBackGroundColorOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_sortAllChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_setBackGroundImageCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_getBackGroundImageTextureSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_hitTest(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_setBackGroundImageScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_setLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Layout_Layout(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_Button_class;
extern JSObject *jsb_Button_prototype;

JSBool js_cocos2dx_studio_Button_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_Button_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_Button(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_Button_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_getTitleText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setTitleFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setTitleColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setCapInsetsDisabledRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_loadTextureDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setTitleText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setCapInsetsNormalRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_loadTexturePressed(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setTitleFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_loadTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_getTitleColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_loadTextureNormal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setCapInsetsPressedRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_getTitleFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_getTitleFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_setPressedActionEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Button_Button(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CheckBox_class;
extern JSObject *jsb_CheckBox_prototype;

JSBool js_cocos2dx_studio_CheckBox_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CheckBox_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CheckBox(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CheckBox_getSelectedState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_loadTextureBackGroundSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_loadTextureBackGroundDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_loadTextureFrontCross(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_loadTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_loadTextureBackGround(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_setSelectedState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_loadTextureFrontCrossDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CheckBox_CheckBox(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_ImageView_class;
extern JSObject *jsb_ImageView_prototype;

JSBool js_cocos2dx_studio_ImageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_ImageView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_ImageView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_ImageView_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_loadTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_setTextureRect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ImageView_ImageView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_Label_class;
extern JSObject *jsb_Label_prototype;

JSBool js_cocos2dx_studio_Label_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_Label_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_Label(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_Label_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setTextVerticalAlignment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setTouchScaleChangeEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_isTouchScaleChangeEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setTextAreaSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_getStringLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setScaleY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setScaleX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_setTextHorizontalAlignment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Label_Label(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_LabelAtlas_class;
extern JSObject *jsb_LabelAtlas_prototype;

JSBool js_cocos2dx_studio_LabelAtlas_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_LabelAtlas_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_LabelAtlas(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_LabelAtlas_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelAtlas_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelAtlas_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelAtlas_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelAtlas_setProperty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelAtlas_setStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelAtlas_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelAtlas_LabelAtlas(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_LoadingBar_class;
extern JSObject *jsb_LoadingBar_prototype;

JSBool js_cocos2dx_studio_LoadingBar_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_LoadingBar_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_LoadingBar(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_LoadingBar_setPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_loadTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_setDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_getDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_getPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LoadingBar_LoadingBar(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_ScrollView_class;
extern JSObject *jsb_ScrollView_prototype;

JSBool js_cocos2dx_studio_ScrollView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_ScrollView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_ScrollView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_ScrollView_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_scrollToTop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_scrollToPercentHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_removeAllChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_scrollToPercentBothDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_getChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_getDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_getChildByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_scrollToBottomLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_getInnerContainer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_jumpToBottom(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_getChildByName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_setDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_scrollToTopLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_jumpToTopRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_jumpToBottomLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_setInnerContainerSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_isInertiaScrollEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_getInnerContainerSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_isBounceEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_jumpToPercentVertical(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_setInertiaScrollEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_jumpToTopLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_jumpToPercentHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_jumpToBottomRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_removeAllChildrenWithCleanup(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_setBounceEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_jumpToTop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_scrollToLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_jumpToPercentBothDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_scrollToPercentVertical(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_scrollToBottom(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_scrollToBottomRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_jumpToLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_scrollToRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_removeChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_setLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_jumpToRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_getChildrenCount(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_scrollToTopRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ScrollView_ScrollView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_Slider_class;
extern JSObject *jsb_Slider_prototype;

JSBool js_cocos2dx_studio_Slider_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_Slider_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_Slider(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_Slider_setPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_loadSlidBallTextureNormal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_loadBarTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_loadProgressBarTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_loadSlidBallTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_setCapInsetProgressBarRebderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_setCapInsetsBarRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_loadSlidBallTexturePressed(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_loadSlidBallTextureDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_getPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_Slider_Slider(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_TextField_class;
extern JSObject *jsb_TextField_prototype;

JSBool js_cocos2dx_studio_TextField_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_TextField_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_TextField(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_TextField_setAttachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_getDeleteBackward(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_getAttachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_getInsertText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setInsertText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_getDetachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_didNotSelectSelf(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_isPasswordEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_attachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setPasswordEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setMaxLengthEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setPasswordStyleText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setPlaceHolder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_getMaxLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_isMaxLengthEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setDetachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setMaxLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setTouchSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_setDeleteBackward(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TextField_TextField(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_ListView_class;
extern JSObject *jsb_ListView_prototype;

JSBool js_cocos2dx_studio_ListView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_ListView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_ListView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_ListView_getIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_removeAllItems(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_setGravity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_pushBackCustomItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_setDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_getItems(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_removeItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_getCurSelectedIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_insertDefaultItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_sortAllChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_setItemsMargin(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_removeLastItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_getItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_setItemModel(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_requestRefreshView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_pushBackDefaultItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_insertCustomItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ListView_ListView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_LabelBMFont_class;
extern JSObject *jsb_LabelBMFont_prototype;

JSBool js_cocos2dx_studio_LabelBMFont_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_LabelBMFont_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_LabelBMFont(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_LabelBMFont_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelBMFont_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelBMFont_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelBMFont_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelBMFont_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelBMFont_setFntFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelBMFont_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_LabelBMFont_LabelBMFont(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_PageView_class;
extern JSObject *jsb_PageView_prototype;

JSBool js_cocos2dx_studio_PageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_PageView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_PageView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_PageView_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_getCurPageIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_addWidgetToPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_getPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_removePage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_insertPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_setLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_scrollToPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_removePageAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_getPages(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_removeAllPages(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_addPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_PageView_PageView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIHelper_class;
extern JSObject *jsb_UIHelper_prototype;

JSBool js_cocos2dx_studio_UIHelper_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UIHelper_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UIHelper(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UIHelper_seekActionWidgetByActionTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIHelper_seekWidgetByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIHelper_seekWidgetByRelativeName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIHelper_seekWidgetByName(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_GUIReader_class;
extern JSObject *jsb_GUIReader_prototype;

JSBool js_cocos2dx_studio_GUIReader_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_GUIReader_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_GUIReader(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_GUIReader_widgetFromJsonFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_GUIReader_purge(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_GUIReader_shareReader(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_TouchGroup_class;
extern JSObject *jsb_TouchGroup_prototype;

JSBool js_cocos2dx_studio_TouchGroup_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_TouchGroup_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_TouchGroup(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_TouchGroup_removeWidget(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TouchGroup_getWidgetByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TouchGroup_getRootWidget(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TouchGroup_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TouchGroup_getWidgetByName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TouchGroup_addWidget(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TouchGroup_clear(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TouchGroup_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_TouchGroup_TouchGroup(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_SceneReader_class;
extern JSObject *jsb_SceneReader_prototype;

JSBool js_cocos2dx_studio_SceneReader_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_SceneReader_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_SceneReader(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_SceneReader_createNodeWithSceneFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_SceneReader_getNodeByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_SceneReader_purge(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_SceneReader_sceneReaderVersion(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_SceneReader_sharedSceneReader(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_ActionObject_class;
extern JSObject *jsb_ActionObject_prototype;

JSBool js_cocos2dx_studio_ActionObject_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_ActionObject_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_ActionObject(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_ActionObject_setCurrentTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_pause(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_setName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_setUnitTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_getTotalTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_getName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_stop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_play(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_getCurrentTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_removeActionNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_getLoop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_addActionNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_getUnitTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_isPlaying(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_updateToFrameByTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_setLoop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_simulationActionUpdate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_ActionObject(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_ActionManager_class;
extern JSObject *jsb_ActionManager_prototype;

JSBool js_cocos2dx_studio_ActionManager_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_ActionManager_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_ActionManager(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_ActionManager_playActionByName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionManager_getActionByName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionManager_releaseActions(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionManager_purge(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionManager_shareManager(JSContext *cx, uint32_t argc, jsval *vp);
#endif

